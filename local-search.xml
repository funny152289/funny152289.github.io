<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Computer Graphics Lab1</title>
    <link href="/2024/09/12/post1/"/>
    <url>/2024/09/12/post1/</url>
    
    <content type="html"><![CDATA[<h1 id="Lab1"><a href="#Lab1" class="headerlink" title="Lab1"></a>Lab1</h1><h2 id="1-test-html-triangel-js"><a href="#1-test-html-triangel-js" class="headerlink" title="1.test.html+triangel.js"></a>1.test.html+triangel.js</h2><p>绘制一个红色的三角形</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--test.html--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Chapter 1. First WebGL Demo<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 顶点着色器和片元着色器代码 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vertex-shader&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;x-shader/x-vertex&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">#version <span class="hljs-number">300</span> es</span><br><span class="language-javascript"><span class="hljs-keyword">in</span> vec4 vPosition;</span><br><span class="language-javascript"><span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>)</span><br><span class="language-javascript">&#123;</span><br><span class="language-javascript">gl_Position = vPosition;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;fragment-shader&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;x-shader/x-fragment&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">#version <span class="hljs-number">300</span> es</span><br><span class="language-javascript">precision mediump float;</span><br><span class="language-javascript">out vec4  fColor;</span><br><span class="language-javascript"><span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>)</span><br><span class="language-javascript">&#123;</span><br><span class="language-javascript">fColor = <span class="hljs-title function_">vec4</span>( <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span> );</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 一组相关的JS库 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;common/webgl-utils.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;common/initShaders.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;common/glMatrix-0.9.5.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 绘制三角形的JS代码 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/triangle.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;triangle-canvas&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border:none;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;500&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;500&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// triangel.js</span><br><span class="hljs-meta">&quot;use strict&quot;</span>;<br><br><span class="hljs-keyword">var</span> gl;<br><span class="hljs-keyword">var</span> points;<br><br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">init</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>( <span class="hljs-string">&quot;triangle-canvas&quot;</span> );<br>gl = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;webgl2&quot;</span>);<br><span class="hljs-keyword">if</span>( !gl )&#123;<br><span class="hljs-title function_">alert</span>( <span class="hljs-string">&quot;WebGL isn&#x27;t available&quot;</span> );<br>&#125;<br><br><span class="hljs-comment">// 三个顶点定义</span><br>points = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br>-<span class="hljs-number">1.0</span>, -<span class="hljs-number">1.0</span>, <br> <span class="hljs-number">0.0</span>,  <span class="hljs-number">1.0</span>, <br> <span class="hljs-number">1.0</span>, -<span class="hljs-number">1.0</span>, <br>]);<br><br><span class="hljs-comment">// 设置视口和背景色</span><br>gl.<span class="hljs-title function_">viewport</span>( <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span> );<br>gl.<span class="hljs-title function_">clearColor</span>( <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span> );<br><br><span class="hljs-comment">// 初始化着色器并传递顶点数据</span><br><span class="hljs-keyword">var</span> program = <span class="hljs-title function_">initShaders</span>( gl, <span class="hljs-string">&quot;vertex-shader&quot;</span>, <span class="hljs-string">&quot;fragment-shader&quot;</span> );<br>gl.<span class="hljs-title function_">useProgram</span>( program );<br><span class="hljs-keyword">var</span> bufferId = gl.<span class="hljs-title function_">createBuffer</span>();<br>gl.<span class="hljs-title function_">bindBuffer</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, bufferId );<br>gl.<span class="hljs-title function_">bufferData</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, points, gl.<span class="hljs-property">STATIC_DRAW</span> );<br><br><span class="hljs-keyword">var</span> vPosition = gl.<span class="hljs-title function_">getAttribLocation</span>( program, <span class="hljs-string">&quot;vPosition&quot;</span> );<br>gl.<span class="hljs-title function_">vertexAttribPointer</span>( vPosition, <span class="hljs-number">2</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span> );<br>gl.<span class="hljs-title function_">enableVertexAttribArray</span>( vPosition );<br><br><span class="hljs-title function_">render</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>)&#123;<br>gl.<span class="hljs-title function_">clear</span>( gl.<span class="hljs-property">COLOR_BUFFER_BIT</span> );<br>gl.<span class="hljs-title function_">drawArrays</span>( gl.<span class="hljs-property">TRIANGLES</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span> );<span class="hljs-comment">// 绘制三角形</span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/../img/post1/1.png"></p><h2 id="2-taska-html-triangel-js"><a href="#2-taska-html-triangel-js" class="headerlink" title="2.taska.html+triangel.js"></a>2.taska.html+triangel.js</h2><p>在test.html的基础上，改动片元着色器中的输出颜色变量</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--taska.html--&gt;</span><br>void main()<br>&#123;<br>    fColor = vec4( 0.0, 1.0, 0.0, 1.0 );// 将三角形颜色设置绿色<br>    //fColor = vec4( 0.0, 0.0, 1.0, 1.0 );// 将三角形颜色设置为蓝色<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/../img/post1/2.png"></p><h2 id="3-taskb-html-square-js"><a href="#3-taskb-html-square-js" class="headerlink" title="3.taskb.html+square.js"></a>3.taskb.html+square.js</h2><p>绘制一个紫色的四边形</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// square.js</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">init</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>( <span class="hljs-string">&quot;square-canvas&quot;</span> );<br>gl = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;webgl2&quot;</span>);<br><span class="hljs-keyword">if</span>( !gl )&#123;<br><span class="hljs-title function_">alert</span>( <span class="hljs-string">&quot;WebGL isn&#x27;t available&quot;</span> );<br>&#125;<br><br><span class="hljs-comment">// Four Vertices</span><br><span class="hljs-keyword">var</span> points = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br>-<span class="hljs-number">1.0</span>, -<span class="hljs-number">1.0</span>,<br> <span class="hljs-number">1.0</span>, -<span class="hljs-number">1.0</span>,<br> <span class="hljs-number">1.0</span>,  <span class="hljs-number">1.0</span>,<br>-<span class="hljs-number">1.0</span>,  <span class="hljs-number">1.0</span>,<br>]);<br><br><span class="hljs-keyword">var</span> colors=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br><span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>,<br>]);<br><br>gl.<span class="hljs-title function_">viewport</span>( <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>/<span class="hljs-number">2</span>, canvas.<span class="hljs-property">height</span>/<span class="hljs-number">2</span>);<br>gl.<span class="hljs-title function_">clearColor</span>( <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span> );<br><br><span class="hljs-keyword">var</span> program = <span class="hljs-title function_">initShaders</span>( gl, <span class="hljs-string">&quot;vertex-shader&quot;</span>, <span class="hljs-string">&quot;fragment-shader&quot;</span> );<br>gl.<span class="hljs-title function_">useProgram</span>( program );<br><br><span class="hljs-keyword">var</span> bufferId = gl.<span class="hljs-title function_">createBuffer</span>();<br>gl.<span class="hljs-title function_">bindBuffer</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, bufferId );<br>gl.<span class="hljs-title function_">bufferData</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, points, gl.<span class="hljs-property">STATIC_DRAW</span> );<br><br><span class="hljs-keyword">var</span> vPosition = gl.<span class="hljs-title function_">getAttribLocation</span>( program, <span class="hljs-string">&quot;vPosition&quot;</span> );<br>gl.<span class="hljs-title function_">vertexAttribPointer</span>( vPosition, <span class="hljs-number">2</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span> );<br>gl.<span class="hljs-title function_">enableVertexAttribArray</span>( vPosition );<br><br><span class="hljs-keyword">var</span> cBuffer = gl.<span class="hljs-title function_">createBuffer</span>();<br>gl.<span class="hljs-title function_">bindBuffer</span>(gl.<span class="hljs-property">ARRAY_BUFFER</span>, cBuffer);<br>gl.<span class="hljs-title function_">bufferData</span>(gl.<span class="hljs-property">ARRAY_BUFFER</span>, colors, gl.<span class="hljs-property">STATIC_DRAW</span>);<br><br><span class="hljs-keyword">var</span> vColor = gl.<span class="hljs-title function_">getAttribLocation</span>(program, <span class="hljs-string">&quot;vColor&quot;</span>);<br>gl.<span class="hljs-title function_">vertexAttribPointer</span>(vColor, <span class="hljs-number">4</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>gl.<span class="hljs-title function_">enableVertexAttribArray</span>(vColor);<br><br><span class="hljs-title function_">render</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>)&#123;<br>gl.<span class="hljs-title function_">clear</span>( gl.<span class="hljs-property">COLOR_BUFFER_BIT</span> );<br>gl.<span class="hljs-title function_">drawArrays</span>( gl.<span class="hljs-property">TRIANGLE_FAN</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span> );<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/../img/post1/3.png"></p><h2 id="4-taskc-html-trisquare-js"><a href="#4-taskc-html-trisquare-js" class="headerlink" title="4.taskc.html+trisquare.js"></a>4.taskc.html+trisquare.js</h2><p>绘制三角形和四边形且颜色相同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//trisquare.js</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">init</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>( <span class="hljs-string">&quot;trisquare-canvas&quot;</span> );<br>gl = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;webgl2&quot;</span>);<br><span class="hljs-keyword">if</span>( !gl )&#123;<br><span class="hljs-title function_">alert</span>( <span class="hljs-string">&quot;WebGL isn&#x27;t available&quot;</span> );<br>&#125;<br><br>points = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br>-<span class="hljs-number">0.5</span>,  <span class="hljs-number">0.5</span>,<br>-<span class="hljs-number">1.0</span>, -<span class="hljs-number">0.5</span>,<br> <span class="hljs-number">0.0</span>, -<span class="hljs-number">0.5</span>,<br> <span class="hljs-number">1.0</span>, -<span class="hljs-number">0.5</span>,<br> <span class="hljs-number">1.0</span>,  <span class="hljs-number">0.5</span>,<br> <span class="hljs-number">0.0</span>,  <span class="hljs-number">0.5</span><br>]);<br><br>gl.<span class="hljs-title function_">viewport</span>( <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span> );<br>gl.<span class="hljs-title function_">clearColor</span>( <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span> );<br><br><span class="hljs-keyword">var</span> program = <span class="hljs-title function_">initShaders</span>( gl, <span class="hljs-string">&quot;vertex-shader&quot;</span>, <span class="hljs-string">&quot;fragment-shader&quot;</span> );<br>gl.<span class="hljs-title function_">useProgram</span>( program );<br><br><span class="hljs-keyword">var</span> bufferId = gl.<span class="hljs-title function_">createBuffer</span>();<br>gl.<span class="hljs-title function_">bindBuffer</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, bufferId );<br>gl.<span class="hljs-title function_">bufferData</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, points, gl.<span class="hljs-property">STATIC_DRAW</span> );<br><br><span class="hljs-keyword">var</span> vPosition = gl.<span class="hljs-title function_">getAttribLocation</span>( program, <span class="hljs-string">&quot;vPosition&quot;</span> );<br>gl.<span class="hljs-title function_">vertexAttribPointer</span>( vPosition, <span class="hljs-number">2</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span> );<br>gl.<span class="hljs-title function_">enableVertexAttribArray</span>( vPosition );<br><span class="hljs-title function_">render</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>)&#123;<br>gl.<span class="hljs-title function_">clear</span>( gl.<span class="hljs-property">COLOR_BUFFER_BIT</span> );<br>gl.<span class="hljs-title function_">drawArrays</span>( gl.<span class="hljs-property">TRIANGLES</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span> );<br>gl.<span class="hljs-title function_">drawArrays</span>( gl.<span class="hljs-property">TRIANGLE_FAN</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span> );<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/../img/post1/4.png"></p><h2 id="5-taskd-html-trisquarenc-js"><a href="#5-taskd-html-trisquarenc-js" class="headerlink" title="5.taskd.html+trisquarenc.js"></a>5.taskd.html+trisquarenc.js</h2><p>将三角形和四边形设置为不同颜色</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//trisquarenc.js</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">init</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;trisquare-canvas&quot;</span>);<br>gl = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;webgl2&quot;</span>);<br><span class="hljs-keyword">if</span>( !gl )&#123;<br><span class="hljs-title function_">alert</span>( <span class="hljs-string">&quot;WebGL isn&#x27;t available&quot;</span> );<br>&#125;<br><br>    <span class="hljs-keyword">var</span> vertices1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br>        -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>        -<span class="hljs-number">1.0</span>, -<span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">0.0</span>, -<span class="hljs-number">0.5</span><br>    ]);<br><br>    <span class="hljs-keyword">var</span> vertices2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br>        <span class="hljs-number">0.0</span>, -<span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">1.0</span>, -<span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">0.0</span>, <span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">0.0</span>, -<span class="hljs-number">0.5</span><br>    ]);<br><br>    gl.<span class="hljs-title function_">viewport</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br>    gl.<span class="hljs-title function_">clearColor</span>(<span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>);<br><br>    <span class="hljs-keyword">var</span> program1 = <span class="hljs-title function_">initShaders</span>(gl, <span class="hljs-string">&quot;vertex-shader&quot;</span>, <span class="hljs-string">&quot;fragment1-shader&quot;</span>);<br>    gl.<span class="hljs-title function_">useProgram</span>(program1);<br><br>    <span class="hljs-keyword">var</span> bufferId1 = gl.<span class="hljs-title function_">createBuffer</span>();<br>    gl.<span class="hljs-title function_">bindBuffer</span>(gl.<span class="hljs-property">ARRAY_BUFFER</span>, bufferId1);<br>    gl.<span class="hljs-title function_">bufferData</span>(gl.<span class="hljs-property">ARRAY_BUFFER</span>, vertices1, gl.<span class="hljs-property">STATIC_DRAW</span>);<br><br>    <span class="hljs-keyword">var</span> vPosition1 = gl.<span class="hljs-title function_">getAttribLocation</span>(program1, <span class="hljs-string">&quot;vPosition&quot;</span>);<br>    gl.<span class="hljs-title function_">vertexAttribPointer</span>(vPosition1, <span class="hljs-number">2</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    gl.<span class="hljs-title function_">enableVertexAttribArray</span>(vPosition1);<br>    <span class="hljs-title function_">render1</span>();<br><br>    <span class="hljs-keyword">var</span> program2 = <span class="hljs-title function_">initShaders</span>( gl, <span class="hljs-string">&quot;vertex-shader&quot;</span>, <span class="hljs-string">&quot;fragment2-shader&quot;</span> );<br>    gl.<span class="hljs-title function_">useProgram</span>( program2 );<br><br>    <span class="hljs-keyword">var</span> bufferId2 = gl.<span class="hljs-title function_">createBuffer</span>();<br>    gl.<span class="hljs-title function_">bindBuffer</span>(gl.<span class="hljs-property">ARRAY_BUFFER</span>, bufferId2);<br>    gl.<span class="hljs-title function_">bufferData</span>(gl.<span class="hljs-property">ARRAY_BUFFER</span>, vertices2, gl.<span class="hljs-property">STATIC_DRAW</span>);<br><br>    <span class="hljs-keyword">var</span> vPosition2 = gl.<span class="hljs-title function_">getAttribLocation</span>( program2, <span class="hljs-string">&quot;vPosition&quot;</span> );<br>    gl.<span class="hljs-title function_">vertexAttribPointer</span>( vPosition2, <span class="hljs-number">2</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span> );<br>    gl.<span class="hljs-title function_">enableVertexAttribArray</span>( vPosition2 );<br>    <span class="hljs-title function_">render2</span>();<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">render1</span>(<span class="hljs-params"></span>) &#123;<br>    gl.<span class="hljs-title function_">clear</span>(gl.<span class="hljs-property">COLOR_BUFFER_BIT</span>);<br>    gl.<span class="hljs-title function_">drawArrays</span>(gl.<span class="hljs-property">TRIANGLES</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">render2</span>(<span class="hljs-params"></span>) &#123;<br>    gl.<span class="hljs-title function_">drawArrays</span>(gl.<span class="hljs-property">TRIANGLES</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/../img/post1/5.png"></p><h2 id="6-taske-html-trianglecolor-js"><a href="#6-taske-html-trianglecolor-js" class="headerlink" title="6.taske.html+trianglecolor.js"></a>6.taske.html+trianglecolor.js</h2><p>绘制一个颜色渐变的三角形</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//trianglecolor.js</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">init</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>( <span class="hljs-string">&quot;triangle-canvas&quot;</span> );<br>gl = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;webgl2&quot;</span>);<br><span class="hljs-keyword">if</span>( !gl )&#123;<br><span class="hljs-title function_">alert</span>( <span class="hljs-string">&quot;WebGL isn&#x27;t available&quot;</span> );<br>&#125;<br><br><span class="hljs-keyword">var</span> vertices = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br>-<span class="hljs-number">1.0</span>, -<span class="hljs-number">1.0</span>, <br> <span class="hljs-number">1.0</span>, -<span class="hljs-number">1.0</span>, <br> <span class="hljs-number">0.0</span>,  <span class="hljs-number">1.0</span>, <br>]);<br><br><span class="hljs-keyword">var</span> vertcolors = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>([<br><span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>,<br><span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>,<br><span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span><br>]);<br>gl.<span class="hljs-title function_">viewport</span>( <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span> );<br>gl.<span class="hljs-title function_">clearColor</span>( <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span> );<br><br><span class="hljs-keyword">var</span> program = <span class="hljs-title function_">initShaders</span>( gl, <span class="hljs-string">&quot;vertex-shader&quot;</span>, <span class="hljs-string">&quot;fragment-shader&quot;</span> );<br>gl.<span class="hljs-title function_">useProgram</span>( program );<br><br><span class="hljs-keyword">var</span> bufferId = gl.<span class="hljs-title function_">createBuffer</span>();<br>gl.<span class="hljs-title function_">bindBuffer</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, bufferId );<br>gl.<span class="hljs-title function_">bufferData</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, vertices, gl.<span class="hljs-property">STATIC_DRAW</span> );<br><br><span class="hljs-keyword">var</span> aPosition = gl.<span class="hljs-title function_">getAttribLocation</span>( program, <span class="hljs-string">&quot;aPosition&quot;</span> );<br>gl.<span class="hljs-title function_">vertexAttribPointer</span>( aPosition, <span class="hljs-number">2</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span> );<br>gl.<span class="hljs-title function_">enableVertexAttribArray</span>( aPosition );<br><br><span class="hljs-keyword">var</span> cbufferId = gl.<span class="hljs-title function_">createBuffer</span>();<br>gl.<span class="hljs-title function_">bindBuffer</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, cbufferId );<br>gl.<span class="hljs-title function_">bufferData</span>( gl.<span class="hljs-property">ARRAY_BUFFER</span>, vertcolors, gl.<span class="hljs-property">STATIC_DRAW</span> );<br><br><span class="hljs-keyword">var</span> aColor = gl.<span class="hljs-title function_">getAttribLocation</span>( program, <span class="hljs-string">&quot;aColor&quot;</span> );<br>gl.<span class="hljs-title function_">vertexAttribPointer</span>( aColor, <span class="hljs-number">3</span>, gl.<span class="hljs-property">FLOAT</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span> );<br>gl.<span class="hljs-title function_">enableVertexAttribArray</span>( aColor );<br><br><span class="hljs-title function_">render</span>();<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>)&#123;<br>gl.<span class="hljs-title function_">clear</span>( gl.<span class="hljs-property">COLOR_BUFFER_BIT</span> );<br>gl.<span class="hljs-title function_">drawArrays</span>( gl.<span class="hljs-property">TRIANGLES</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span> );<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/../img/post1/6.png"></p><h3 id="以上所有完整代码在我的github库存放"><a href="#以上所有完整代码在我的github库存放" class="headerlink" title="以上所有完整代码在我的github库存放"></a>以上所有完整代码在<a href="https://github.com/Curreny/Computer_Graphics">我的github库</a>存放</h3>]]></content>
    
    
    <categories>
      
      <category>Computer Graphics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>html</tag>
      
      <tag>javascript</tag>
      
      <tag>WebGL</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
